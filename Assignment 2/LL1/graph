digraph {
	START
	"$"
	PROGR
	PROCDEFS
	PROCDEFS
	PROC
	"}"
	PROGR
	PROCDEFS
	ALGO
	SEQ
	ALGO
	SEQ
	KOMMENT
	INSTR
	BRANCH
	ELSE
	"}"
	ALGO
	SEQ
	KOMMENT
	INSTR
	INPUT
	NUMVAR
	DIGITS
	MORE
	D
	9
	n
	g
	"e{"
	"}"
	ALGO
	SEQ
	KOMMENT
	INSTR
	OUTPUT
	TEXT
	STRINGV
	DIGITS
	MORE
	DIGITS
	MORE
	D
	0
	D
	1
	s
	r
	")t{"
	BOOLEXPR
	CMPR
	")"
	NUMEXPR
	NUMVAR
	DIGITS
	MORE
	D
	8
	n
	","
	NUMEXPR
	NUMVAR
	DIGITS
	MORE
	D
	7
	n
	"E("
	"i("
	";"
	KOMMENT
	"*"
	C
	5
	C
	4
	C
	3
	C
	2
	C
	1
	C
	d
	C
	l
	C
	r
	C
	o
	C
	W
	C
	o
	C
	l
	C
	l
	C
	e
	C
	H
	"*"
	INSTR
	LOOP
	"}"
	ALGO
	SEQ
	KOMMENT
	INSTR
	ASSIGN
	NUMEXPR
	")"
	NUMEXPR
	NUMVAR
	DIGITS
	MORE
	D
	6
	n
	","
	NUMEXPR
	DECNUM
	NEG
	POS
	D
	2
	D
	1
	"."
	INT
	MORE
	DIGITS
	MORE
	D
	1
	1
	"-"
	"a("
	"/="
	NUMVAR
	DIGITS
	MORE
	D
	3
	n
	"){"
	BOOLEXPR
	LOGIC
	T
	"w("
	"{"
	DIGITS
	MORE
	D
	2
	p
	","
	ALGO
	SEQ
	KOMMENT
	INSTR
	CALL
	DIGITS
	MORE
	DIGITS
	MORE
	D
	2
	D
	1
	cp
	START -> "$"
	START -> PROGR
	PROGR -> PROCDEFS
	PROGR -> ALGO
	PROCDEFS -> PROCDEFS
	PROCDEFS -> PROC
	PROCDEFS -> ","
	PROCDEFS -> "ε"
	PROC -> "}"
	PROC -> PROGR
	PROC -> "{"
	PROC -> DIGITS
	PROC -> p
	PROGR -> PROCDEFS
	PROGR -> ALGO
	PROCDEFS -> "ε"
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> ALGO
	SEQ -> ";"
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> "ε"
	KOMMENT -> "ε"
	INSTR -> BRANCH
	BRANCH -> ELSE
	BRANCH -> "}"
	BRANCH -> ALGO
	BRANCH -> ")t{"
	BRANCH -> BOOLEXPR
	BRANCH -> "i("
	ELSE -> "}"
	ELSE -> ALGO
	ELSE -> "e{"
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> "ε"
	KOMMENT -> "ε"
	INSTR -> INPUT
	INPUT -> NUMVAR
	INPUT -> g
	NUMVAR -> DIGITS
	NUMVAR -> n
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 9
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> "ε"
	KOMMENT -> "ε"
	INSTR -> OUTPUT
	OUTPUT -> TEXT
	TEXT -> STRINGV
	TEXT -> r
	STRINGV -> DIGITS
	STRINGV -> s
	DIGITS -> MORE
	DIGITS -> D
	MORE -> DIGITS
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 0
	D -> 1
	BOOLEXPR -> CMPR
	CMPR -> ")"
	CMPR -> NUMEXPR
	CMPR -> ","
	CMPR -> NUMEXPR
	CMPR -> "E("
	NUMEXPR -> NUMVAR
	NUMVAR -> DIGITS
	NUMVAR -> n
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 8
	NUMEXPR -> NUMVAR
	NUMVAR -> DIGITS
	NUMVAR -> n
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 7
	KOMMENT -> "*"
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> C
	KOMMENT -> "*"
	C -> 5
	C -> 4
	C -> 3
	C -> 2
	C -> 1
	C -> d
	C -> l
	C -> r
	C -> o
	C -> W
	C -> o
	C -> l
	C -> l
	C -> e
	C -> H
	INSTR -> LOOP
	LOOP -> "}"
	LOOP -> ALGO
	LOOP -> "){"
	LOOP -> BOOLEXPR
	LOOP -> "w("
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> "ε"
	KOMMENT -> "ε"
	INSTR -> ASSIGN
	ASSIGN -> NUMEXPR
	ASSIGN -> "/="
	ASSIGN -> NUMVAR
	NUMEXPR -> ")"
	NUMEXPR -> NUMEXPR
	NUMEXPR -> ","
	NUMEXPR -> NUMEXPR
	NUMEXPR -> "a("
	NUMEXPR -> NUMVAR
	NUMVAR -> DIGITS
	NUMVAR -> n
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 6
	NUMEXPR -> DECNUM
	DECNUM -> NEG
	NEG -> POS
	NEG -> "-"
	POS -> D
	POS -> D
	POS -> "."
	POS -> INT
	D -> 2
	D -> 1
	INT -> MORE
	INT -> 1
	MORE -> DIGITS
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 1
	NUMVAR -> DIGITS
	NUMVAR -> n
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 3
	BOOLEXPR -> LOGIC
	LOGIC -> T
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 2
	ALGO -> SEQ
	ALGO -> KOMMENT
	ALGO -> INSTR
	SEQ -> "ε"
	KOMMENT -> "ε"
	INSTR -> CALL
	CALL -> DIGITS
	CALL -> cp
	DIGITS -> MORE
	DIGITS -> D
	MORE -> DIGITS
	DIGITS -> MORE
	DIGITS -> D
	MORE -> "ε"
	D -> 2
	D -> 1
}
